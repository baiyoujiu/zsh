<?php
/* API 接口文件
 * @author Bill
 * @data 21090218
 */
namespace app\mall\controller;
use think\Controller;
use think\Validate;

class Api extends Controller{
	public function __construct() {
		parent::__construct();
		if (!Request()->isAjax()){
			return ['status'=>220,'msg'=>'非法请求！'];
		}
	}
	
	/* 子地区列表
	 * @author Bill
	* @data 21090219
	*/
	public function getchildarea(){
		$code = input('post.code/d');
		if(empty($code)){
			return ['status'=>221,'msg'=>'非法请求！'];
		}
		//获取子地区列表
		$arealist = get_child_area($code,$field = 'code,area');
		
		$html = '';
		foreach ($arealist as $v){
			$html .= '<option value="'.$v['code'].'">'.$v['area'].'</option>';
		}
		
		return ['status'=>200,'msg'=>'成功','html'=>$html];
	}
	/********************************用户收货地址保存 
	 * @author Bill
	 * @data 21090724
	 */
	public function adrsave(){
		$userid = session('userid');
		if(empty($userid)){
			return ['status'=>221,'msg'=>'请先登陆'];
		}
		$rule = [
		['recname','require|chsDash','请输入收贷人|收贷人支持汉字、字母、数字'],
		['phone','require|number|length:11,11','请输入手机号|手机号格式不正确|手机号必须11位'],
		['area','require|number','请选择区/县|区/县格式不正确'],
		['street','require|number','请选择街道/镇|街道/镇格式不正确'],
		['sccode','number','学校地址格式不正确'],
		['address','chsDash','详细地址支持汉字、字母、数字及“-”、“_”']
		];
			
		$data = request()->post();
		$validate = new Validate($rule);
		$result   = $validate->check($data);
		if(!$result){
			return ['status'=>201,'msg'=>$validate->getError()];
		}
		
		$phone = $data['phone'];
		if(!preg_match("/^1[3|4|5|6|7|8|9][0-9]\d{8}$/",$phone)){
			return ['status'=>203,'msg'=>'手机号格式有误'];
		}
		
		$nowtimes = date('Y-m-d H:i:s'); 
		
		$data['updatetime'] = $nowtimes;
		$data['userid'] = $userid;
		$data['province'] = 330000;
		$data['city'] = 330100;
		$data['school'] = 0;
		if($data['sccode']>1){
			$data['school'] = 1;
			$data['address'] = $data['sccode'];
		}
		unset($data['sccode']);
		$ano = $data['ano'];
		unset($data['ano']);
		
		if($ano>1){
			db('users_address')->where('ano',$ano)->update($data);
		}else{
			$data['ano'] = getSerialNumber(60);
			$data['addtime'] = $nowtimes;
			db('users_address')->insert($data);
			$ano = $data['ano'];
		}
		
		//订单调整收货地址时用
		$addrhtml = '';
		//所有有效地区
		$arealist = db('system_area')->field('code,area')->where('status',1)->select();
		$arealist = getArrOne($arealist,'area','code');
		
		$addrhtml = $arealist[$data['province']].$arealist[$data['city']].$arealist[$data['area']].$arealist[$data['street']].' ';
		$addrhtml .=($data['school']?$arealist[$data['address']]:$data['address']);
		return ['status'=>200,'msg'=>'收货地址保存成功','addrinf'=>$addrhtml,'ano'=>$ano,'school'=>$data['school']];
    }
    public function adred(){
    	$ano = input('post.ano');
    	$userid = session('userid');
    	if(empty($userid)){
    		return ['status'=>221,'msg'=>'请先登陆'];
    	}
    	if(!is_numeric($ano)){
    		return ['status'=>221,'msg'=>'参数错误'];
    	}
    	$wheres = ['ano'=>$ano,'userid'=>$userid];
    	$info = db('users_address')->where($wheres)->find();
    	
    	//区县下的街道
    	$streets = get_child_area($info['area'],$field = 'code,area');
    	$streethtml = '';
    	foreach ($streets as $v){
    		$streethtml .= '<option value="'.$v['code'].'"'.(($info['street']==$v['code'])?' selected="selected"':'').'>'.$v['area'].'</option>';
    	}
    	//街道下的学校
    	$schools = get_child_area($info['street'],$field = 'code,area');
    	$schoolhtml = '';
    	foreach ($schools as $v){
    		$schoolhtml .= '<option value="'.$v['code'].'"'.(($info['address']==$v['code'])?' selected="selected"':'').'>'.$v['area'].'</option>';
    	}
    	return ['status'=>200,'msg'=>'成功！','sthtml'=>$streethtml,'schtml'=>$schoolhtml];
    }
    public function adrdel(){
    	$ano = input('post.ano');
    	$userid = session('userid');
    	if(empty($userid)){
    		return ['status'=>221,'msg'=>'请先登陆'];
    	}
    	if(!is_numeric($ano)){
    		return ['status'=>221,'msg'=>'参数错误'];
    	}
    	$wheres = ['ano'=>$ano,'userid'=>$userid];
    	db('users_address')->where($wheres)->delete();
    	return ['status'=>200,'msg'=>'收货地址删除成功！'];
    }
    public function adrflg(){
    	$ano = input('post.ano');
    	$userid = session('userid');
    	if(empty($userid)){
    		return ['status'=>221,'msg'=>'请先登陆'];
    	}
    	if(!is_numeric($ano)){
    		return ['status'=>221,'msg'=>'参数错误'];
    	}
    	$wheres = ['userid'=>$userid];
    	$data = ['flg'=>0];
    	db('users_address')->where($wheres)->update($data);
    	$wheres['ano'] = $ano;
    	$data = ['flg'=>1];
    	db('users_address')->where($wheres)->update($data);
    	return ['status'=>200,'msg'=>'默认收货地址修改成功！'];
    }
    
    /********************************商品收藏
     * @author Bill
    * @data 21090724
    */
    public function collect(){
    	$gno = input('post.gno/d');
    	$userid = session('userid');
    	if(empty($userid)){
    		return ['status'=>221,'msg'=>'请先登陆'];
    	}
    	if(empty($gno)){
    		return ['status'=>221,'msg'=>'参数错误'];
    	}
    	$wheres = ['type'=>0,'userid'=>$userid,'gno'=>$gno];
    	$inf = db('users_collect')->where($wheres)->find();
    	if($inf){
    		//删除
    		db('users_collect')->where($wheres)->delete();
    	}else{
    		//添加
    		$data = ['userid'=>$userid,'type'=>0,'gno'=>$gno,'addtime'=>date('Y-m-d H:i:s')];
    		db('users_collect')->insert($data);
    	}
    	return ['status'=>200,'msg'=>'成功！'];
    }
    public function collectdel(){
    	$rule = [
    	['gno','require|array','至少要删除1种商品|至少要删除1种商品'],
    	];
    	$data = request()->post();
    	$validate = new Validate($rule);
    	$result   = $validate->check($data);
    	if(!$result){
    		return ['status'=>201,'msg'=>$validate->getError()];
    	}
    	$userid = session('userid');
    	if(empty($userid)){
    		return ['status'=>221,'msg'=>'请先登陆'];
    	}
    	//商品编号
    	$gnoarr = [];
    	foreach ($data['gno'] as $v){
    		$gnoarr[] = intval($v);
    	}
    	$wheres = ['type'=>0,'userid'=>$userid,'gno'=>['in',$gnoarr]];
    	db('users_collect')->where($wheres)->delete();
    	return ['status'=>200,'msg'=>'成功！'];
    }
    public function trackdel(){
    	$rule = [
    	['gno','require|array','至少要删除1种商品|至少要删除1种商品'],
    	];
    	$data = request()->post();
    	$validate = new Validate($rule);
    	$result   = $validate->check($data);
    	if(!$result){
    		return ['status'=>201,'msg'=>$validate->getError()];
    	}
    	$userid = session('userid');
    	if(empty($userid)){
    		return ['status'=>221,'msg'=>'请先登陆'];
    	}
    	//商品编号
    	$gnoarr = [];
    	foreach ($data['gno'] as $v){
    		$gnoarr[] = intval($v);
    	}
    	$wheres = ['type'=>1,'userid'=>$userid,'gno'=>['in',$gnoarr]];
    	db('users_collect')->where($wheres)->delete();
    	return ['status'=>200,'msg'=>'成功！'];
    }
    /********************************会员充值
     * @author Bill
    * @data 21090725
    */
    public function tovip(){
    	$userid = session('userid');
    	if(empty($userid)){
    		return ['status'=>221,'msg'=>'请先登陆'];
    	}
    	$rule = [
    	['amount','require|number|in:100,300','请选择押金方案|押金方案格式不正确|押金方案不正确'],
    	['agreement','require|number','请先阅读并勾选租书协议|请先阅读并勾选租书协议']
    	];
    	$data = request()->post();
    	$validate = new Validate($rule);
    	$result   = $validate->check($data);
    	if(!$result){
    		return ['status'=>201,'msg'=>$validate->getError()];
    	}
    	//押金金额
    	$amount = $data['amount']*100;
    	//充值编号
    	$recharge_no = getSerialNumber(1);
    	$recharge_no = '8'.date('ymd').substr($recharge_no,-5);
    	$recharge_note = '支付宝在线';
    	$data = ['userid'=>$userid,'recharge_no'=>$recharge_no,'pay_way'=>'ONLINEBF','amount'=>$amount
    				,'recharge_note'=>$recharge_note,'addtime'=>date('Y-m-d H:i:s')];
	    $rs = db('finance_recharge')->insert($data);
	    if($rs){
	    	return ['status'=>200,'msg'=>'成功','no'=>$recharge_no];
	    }else{
	    	return ['status'=>210,'msg'=>'记录保存失败'];
	    }
    }
}