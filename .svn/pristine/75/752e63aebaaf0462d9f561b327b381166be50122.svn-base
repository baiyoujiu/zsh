<?php
/* 商品分类及分类规格属性管理
 * @author Bill
 * @data 20190731
 */
namespace app\mcenter\controller;
use think\Controller;
use think\Validate;

class Category extends Controller{
	public function __construct() {
		parent::__construct();
		$this->mid = session('mid');
		/* if(empty($this->mid)){
			if (Request()->isAjax()){
				return ['status'=>220,'msg'=>'请先登陆！'];
			}else{
				$this->redirect(url('members/index'));
			}
		} */
		$userInfo = array();
		$userInfo = session('userInfo');
		$this->assign('userInfo',$userInfo);

	}
	/* 分类管理
	 * @author Bill
	* @date 20190731
	*/
	public function index(){
		$status = input('get.status/d');
		$keyword = input('get.keyword','','addslashes,strip_tags');
		$keyword = trim($keyword);
		$page = input('get.page/d');
		$pagesize = 10;
		$urlArr = array();
	
		if(!empty($keyword)){
			$wheres['name'] = ['like',"%$keyword%"];
			$urlArr['keyword'] = $keyword;
		}
		if(!empty($status)){
			$wheres['status'] = $status;
			$urlArr['status'] = $status;
		}
		$this->assign('keyword',$keyword);
		$this->assign('status',$status);
	
		$statusArr = array();
		$statusArr[1] = '未发布';
		$statusArr[2] = '已发布';
		$this->assign('statusArr',$statusArr);
	
		$count = db('good_category')->where($wheres)->count();
		$maxPage = ceil($count/$pagesize);
		$page = $page>$maxPage?$maxPage:$page;
		$page = $page<1?1:$page;
			
		$lists = db('good_category')->where($wheres)->order('weight DESC,id DESC')
		->limit(($page-1)*$pagesize,$pagesize)->select();
		$this->assign('lists',$lists);
		$this->assign('pageStr',get_page_str($count,$urlArr,$page,$pagesize));
	
		return view();
	}
	
	
	
	/* 分类规格管理
	 * @author Bill
	* @date 20190731
	*/
	public function spec(){
		$status = input('get.status/d');
		$keyword = input('get.keyword','','addslashes,strip_tags');
		$keyword = trim($keyword);
		$page = input('get.page/d');
		$pagesize = 10;
		$urlArr = array();

		if(!empty($keyword)){
			$wheres['name'] = ['like',"%$keyword%"];
			$urlArr['keyword'] = $keyword;
		}
		if(!empty($status)){
			$wheres['status'] = $status;
			$urlArr['status'] = $status;
		}
		$this->assign('keyword',$keyword);
		$this->assign('status',$status);

		$statusArr = array();
		$statusArr[1] = '未发布';
		$statusArr[2] = '发布';
		$this->assign('statusArr',$statusArr);

		$count = db('good_cat_spec')->where($wheres)->count();
		$maxPage = ceil($count/$pagesize);
		$page = $page>$maxPage?$maxPage:$page;
		$page = $page<1?1:$page;
			
		$lists = db('good_cat_spec')->where($wheres)->order('weight DESC,id DESC')
							->limit(($page-1)*$pagesize,$pagesize)->select();
		$this->assign('lists',$lists);
		$this->assign('pageStr',get_page_str($count,$urlArr,$page,$pagesize));

		return view();
    }
    public function specsave() {
    	
    	//限定需AJAX请求
    	if (!Request()->isAjax()){
    		return ['status'=>220,'msg'=>'非法请求！'];
    	}
    	$rule = [
		['pid','require','请选择分类等级'],
		['name','require|min:2','请输入分类名称|分类名称至少2个字符'],
		];
    	
		$data = request()->post();
		$validate = new Validate($rule);
		$result   = $validate->check($data);
		if(!$result){
			return ['status'=>201,'msg'=>$validate->getError()];
		}
		 
		$objNo = $data['objNo'];
		unset($data['objNo']);
		$cid = $data['pid'];
		$sum = db('good_cat_spec')->where('cid='.$cid)->count();
		unset($data['pid']);
		$time = date('Y-m-d H:i:s');
		$data['cid'] = $cid;
		$data['updatetime'] = $time;
		
		if($objNo){
			db('good_cat_spec')->where('id',$objNo)->update($data);
		}else{
			if($sum>=2){
				return ['status'=>220,'msg'=>'一个分类最多只能有2个规格！'];
			}
			db('good_cat_spec')->insert($data);
		}
    	return ['status'=>200,'msg'=>'成功！'];
    }
    
    
   
    /* 分类属性管理
     * @author Bill
    * @date 20190731
    */
    public function attr(){
    	$status = input('get.status/d');
    	$keyword = input('get.keyword','','addslashes,strip_tags');
    	$keyword = trim($keyword);
    	$page = input('get.page/d');
    	$pagesize = 10;
    	$urlArr = array();
    
    	if(!empty($keyword)){
    		$wheres['name'] = ['like',"%$keyword%"];
    		$urlArr['keyword'] = $keyword;
    	}
    	if(!empty($status)){
    		$wheres['status'] = $status;
    		$urlArr['status'] = $status;
    	}
    	$this->assign('keyword',$keyword);
    	$this->assign('status',$status);
    
    	$statusArr = array();
    	$statusArr[1] = '未发布';
    	$statusArr[2] = '发布';
    	$this->assign('statusArr',$statusArr);
    
    	$count = db('good_cat_spec')->where($wheres)->count();
    	$maxPage = ceil($count/$pagesize);
    	$page = $page>$maxPage?$maxPage:$page;
    	$page = $page<1?1:$page;
    		
    	$lists = db('good_cat_spec')->where($wheres)->order('weight DESC,id DESC')
    	->limit(($page-1)*$pagesize,$pagesize)->select();
    	$this->assign('lists',$lists);
    	$this->assign('pageStr',get_page_str($count,$urlArr,$page,$pagesize));
    
    	return view();
    }
    public function attrsave() {
    	 
    	//限定需AJAX请求
    	if (!Request()->isAjax()){
    		return ['status'=>220,'msg'=>'非法请求！'];
    	}
    	$rule = [
    	['pid','require','请选择分类等级'],
    	['name','require|min:2','请输入分类名称|分类名称至少2个字符'],
    	];
    	 
    	$data = request()->post();
    	$validate = new Validate($rule);
    	$result   = $validate->check($data);
    	if(!$result){
    		return ['status'=>201,'msg'=>$validate->getError()];
    	}
    		
    	$objNo = $data['objNo'];
    	unset($data['objNo']);
    	$cid = $data['pid'];
    	$sum = db('good_cat_spec')->where('cid='.$cid)->count();
    	unset($data['pid']);
    	$time = date('Y-m-d H:i:s');
    	$data['cid'] = $cid;
    	$data['updatetime'] = $time;
    
    	if($objNo){
    		db('good_cat_spec')->where('id',$objNo)->update($data);
    	}else{
    		if($sum>=2){
    			return ['status'=>220,'msg'=>'一个分类最多只能有2个规格！'];
    		}
    		db('good_cat_spec')->insert($data);
    	}
    	return ['status'=>200,'msg'=>'成功！'];
    }
    
    /* 分类属性值管理
     * @author Bill
    * @date 20190731
    */
    public function attri(){
    	$status = input('get.status/d');
    	$attrid = input('get.attrid/d');
    	$keyword = input('get.keyword','','addslashes,strip_tags');
    	$keyword = trim($keyword);
    	$page = input('get.page/d');
    	$pagesize = 10;
    	$urlArr = array();
    
    	if(!empty($keyword)){
    		$wheres['name'] = ['like',"%$keyword%"];
    		$urlArr['keyword'] = $keyword;
    	}
    	if(!empty($status)){
    		$wheres['status'] = $status;
    		$urlArr['status'] = $status;
    	}
    	if(!empty($attrid)){
    		$wheres['attrid'] = $attrid;
    		$urlArr['attrid'] = $attrid;
    	}
    	$this->assign('keyword',$keyword);
    	$this->assign('status',$status);
    	$this->assign('attrid',$attrid);
    
    	$statusArr = array();
    	$statusArr[1] = '未发布';
    	$statusArr[2] = '已发布';
    	$this->assign('statusArr',$statusArr);
    
    	$count = db('good_cat_attr_item')->where($wheres)->count();
    	$maxPage = ceil($count/$pagesize);
    	$page = $page>$maxPage?$maxPage:$page;
    	$page = $page<1?1:$page;
    
    	$lists = db('good_cat_attr_item')->where($wheres)->order('weight DESC,id DESC')
    				->limit(($page-1)*$pagesize,$pagesize)->select();
    	$this->assign('lists',$lists);
    	$this->assign('pageStr',get_page_str($count,$urlArr,$page,$pagesize));
    	
    	
    	//分类一维数组
    	$catlists = db('good_category')->select();
    	$this->assign('catarr',getArrOne($catlists,'name','id'));
    	
    	//分类属性二维数组
    	$attrlists = db('good_cat_attr')->order('cid asc,weight DESC')->select();
    	$this->assign('attrlists',$attrlists);
    
    	return view();
    }
    public function attrisave() {
    
    	//限定需AJAX请求
    	if (!Request()->isAjax()){
    		return ['status'=>220,'msg'=>'非法请求！'];
    	}
    	$rule = [
    	['name','require|min:2','请输入属性值|属性值至少2个字符'],
    	];
    	$data = request()->post();
    	$validate = new Validate($rule);
    	$result   = $validate->check($data);
    	if(!$result){
    		return ['status'=>201,'msg'=>$validate->getError()];
    	}
    
    	$objNo = $data['objno'];
    	unset($data['objno']);
    	$nowtimes = date('Y-m-d H:i:s');
    	$data['updatetime'] = $nowtimes;
    
    	if($objNo){
    		unset($data['attrid']);
    		db('good_cat_attr_item')->where('id',$objNo)->update($data);
    	}else{
    		$attrid = $data['attrid'];
    		if(empty($attrid)){
    			return ['status'=>202,'msg'=>'请选择所属分类属性'];
    		}
    		$attrinf = db('good_cat_attr')->where('id='.$attrid)->find();
    		$cid = $attrinf['cid'];
    		
    		//添加时换行算一个
    		$name = $data['name'];
    		$namearr = explode("\r\n", $name);
    		
    		$gcaiarr = [];
    		foreach ($namearr as $v){
    			if($v){
    				$gcaiarr[] = ['attrid'=>$attrid,'cid'=>$cid,'name'=>$v,'weight'=>$data['weight'],'status'=>$data['status'],'updatetime'=>$nowtimes]; 
    			}
    		}
    		db('good_cat_attr_item')->insertAll($gcaiarr);
    	}
    	return ['status'=>200,'msg'=>'成功！'];
    }
}