<?php
/* 共享空间出租
 * @author Bill
 * @data 20190627
 */
namespace app\mall\controller;
use think\Controller;

class Pay extends Controller{
	public function __construct() {
		parent::__construct();
	}
	//支付宝今手机在线支付 
	public function alipay(){
		$objNo = input('get.objno');
		if(!is_numeric($objNo)){
			echo '<script type="text/javascript">window.history.go(-1);</script>';
			exit;
		}
		//业务类型
		$type = substr($objNo,0,1);
		//押金充值
		if($type ==8){
			$wheres = ['recharge_no'=>$objNo,'pay_way'=>'ONLINEBF','status'=>'1'];
			$inf = db('finance_recharge')->where($wheres)->find();
			
			$inf['title'] = '押金充值';
		//商品购买
		}else{
			$wheres = ['order_no'=>$objNo,'pay_status'=>1];
			$inf = db('order')->where($wheres)->find();
			
			$inf['title'] = '商品购买';
		}
		
		if(empty($inf)){
			echo '<script type="text/javascript">window.history.go(-1);</script>';
			exit;
		}
		
		//支付金额单位元
		$amount = $inf['amount']/100;  
		
		//商品名称
		$osubject = $inf['title'];
		//$osubject = $objNo;
		
		
		/* 支付数据整理*/
		//商户订单号，商户网站订单系统中唯一订单号，必填
		$out_trade_no = $objNo;
		
		//订单名称，必填
		$subject = $osubject;
		
		//付款金额，必填
		$total_amount = $amount;
		
		//商品描述，可空
		$body = $subject;
		
		//超时时间
		$timeout_express="5m";
		
		//支付调用
		$config = config('alipay');
		require_once '../extend/alipay/wappay/service/AlipayTradeService.php';
		require_once '../extend/alipay/wappay/buildermodel/AlipayTradeWapPayContentBuilder.php';
		
		$payRequestBuilder = new \AlipayTradeWapPayContentBuilder();
		$payRequestBuilder->setBody($body);
		$payRequestBuilder->setSubject($subject);
		$payRequestBuilder->setOutTradeNo($out_trade_no);
		$payRequestBuilder->setTotalAmount($total_amount);
		$payRequestBuilder->setTimeExpress($timeout_express);
		
		/**
		 * pagePay 手机支付请求
		 * @param $builder 业务参数，使用buildmodel中的对象生成。
		 * @param $return_url 同步跳转地址，公网可以访问
		 * @param $notify_url 异步通知地址，公网可以访问
		 * @return $response 支付宝返回的信息
		 */
		$payResponse = new \AlipayTradeService($config);
		$result=$payResponse->wapPay($payRequestBuilder,$config['return_url'],$config['notify_url']);
    }
    //支付宝同步返回
    public function alirurl() {
    	require_once '../extend/alipay/wappay/service/AlipayTradeService.php';
    	$config = config('alipay');
    	
    	$arr=$_GET;
    	$alipaySevice = new \AlipayTradeService($config);
    	$result = $alipaySevice->check($arr);
    	
    	/* 实际验证过程建议商户添加以下校验。
    	 1、商户需要验证该通知数据中的out_trade_no是否为商户系统中创建的订单号，
    	2、判断total_amount是否确实为该订单的实际金额（即商户订单创建时的金额），
    	3、校验通知中的seller_id（或者seller_email) 是否为out_trade_no这笔单据的对应的操作方（有的时候，一个商户可能有多个seller_id/seller_email）
    	4、验证app_id是否为该商户本身。
    	*/
    	if($result) {//验证成功
    		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    		//请在这里加上商户的业务逻辑程序代码
    	
    		//——请根据您的业务逻辑来编写程序（以下代码仅作参考）——
    		//获取支付宝的通知返回参数，可参考技术文档中页面跳转同步通知参数列表
    	
    		//商户订单号
    		$out_trade_no = htmlspecialchars($_GET['out_trade_no']);
    	
    		//支付宝交易号
    		$trade_no = htmlspecialchars($_GET['trade_no']);
    	
    		//echo "suess:".$trade_no."<br />order：".$out_trade_no;
    	
    		//——请根据您的业务逻辑来编写程序（以上代码仅作参考）——
    		
    		
    		
    		//业务类型
    		$type = substr($out_trade_no,0,1);
    		//押金充值
    		if($type ==8){
    			$this->redirect(url('uinf/index'));
    			//商品购买
    		}else{
    			$this->redirect(url('uinf/order'));
    		}
    		/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
    	}else {
    		//验证失败
    		//echo "false";
    		
    		$this->redirect(url('uinf/index'));
    	}
    }
    
    
}